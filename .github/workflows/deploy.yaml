name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install

      - name: Analyze with SonarQube
        uses: SonarSource/sonarcloud-github-action@v1.8
        with:
          token: ${{ secrets.SONAR_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Scan Docker Image with Trivy
        run: trivy image ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}

      - name: Login to AWS ECR
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Push Docker Image to ECR
        run: |
          docker tag ${{ secrets.ECR_REPO_URI }}:${{ github.sha }} ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REPO_URI }}:${{ github.sha }}

      - name: Deploy to Kubernetes
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.BASTION_SSH_KEY }} ec2-user@${{ secrets.BASTION_HOST }} << 'EOF'
            aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}
            kubectl set image deployment/my-app my-app=${{ secrets.ECR_REPO_URI }}:${{ github.sha }} -n default
          EOF
